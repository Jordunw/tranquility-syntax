{
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"name": "Tranquility",
	"patterns": [
		{
			"include": "#comments"
		},
		{
			"include": "#operators"
		},
		{
			"include": "#strings"
		},
		{
			"include": "#numbers"
		},
		{
			"include": "#reserved-words"
		},
		{
			"include": "#keywords"
		},
		{
			"include": "#ctrl-statements"
		}
	],
	"repository": {
		"numbers": {
			"patterns": [
				{
					"name": "keyword.other.unit.suffix.integer.tranq",
					"match": "(^-?[0-9][0-9\\.]+$)"
				}
			]
		},
		"ctrl-statements": {
			"patterns": [
				{
					"name": "keyword.control.tranq",
					"match": "\\b(if|else|loop|until|return)\\b"
				}
			]
		},
		"reserved-words": {
			"name": "entity.name.function.member.tranq",
			"match": "\\b(alloc|button|buttonlabel|free|html|i2s|iprint|iread|makeimg|makelabel|maketable|nl|random|setcell|setcellcolor|setimg|setlabel|sprint|sread|stoptimer|timer)\\b"
		},
		"expression": {
			"patterns": [
				{	"include": "#reserved-words"	},
				{	"include": "#numbers"			},
				{	"include": "#containers"		},
				{	"include": "#strings"			}
			]
		},
		"paren-expression": {
			"patterns": [
				{
					"name": "punctuation.definition.paramenters.tranq",
					"captures": {
						"1": {
							"name": "entity.name.function.tranq"
						}
					},
					"match": "\\b(\\w+)(?:\\s+([-a-zA-Z0-9_]+))?\\s*(\\()",
					"patterns": [
						{	"include": "#expression"	}	
					]
				}
			]
		},
		"keywords": {
			"patterns": [
				{
					"name": "keyword.function.tranq",
					"match": "fun"
				},
				{
					"name": "keyword.variable.tranq",
					"match": "var"
				}
			]
		},
		"strings": {
			"name": "string.quoted.double.tranq",
			"begin": "\"",
			"end": "\"",
			"patterns": [
				{
					"name": "constant.character.escape.tranq",
					"match": "\\\\."
				}
			]
		},
		
		"comments": {
			"patterns" : [
				{
					"name": "comment.line.number-sign.tranq",
					"begin": "#",
					"beginCaptures": {
						"0": {
							"name": "punctuation.definition.comment.tranq"
						}
					},
					"end": "\\n"
				},
				{
					"include": "#comments-inline"
				}
			]
		},
		"comments-inline": {
			"patterns": [
				{
					"begin": "(^[ \\t]+)?(?=//)",
					"beginCaptures": {
						"1": {
							"name": "punctuation.whitespace.comment.leading.tranq"
						}
					},
					"end": "(?!\\G)",
					"patterns": [
						{
							"name": "comment.line.number-sign.tranq",
							"begin": "#",
							"beginCaptures": {
								"0": {
									"name": "punctuation.defintion.comment.tranq"
								}
							},
							"end": "\\n"
						}
					]
				}
			]
		},
		"constants": {
			"patterns": [
				{
					"name": "constant.numeric.tranq",
					"match": "(^-?[0-9][0-9\\.]+$)"
				},
				{
					"name": "constant.character.escape.tranq",
					"match": "\\b(\\b|\\\\|\\n|\\r|\\t)\\b"
				}
			]
		},
		"operators": {
			"patterns": [
				{
					"name": "keyword.operator.increment.tranq",
					"match": "\\+\\+"
				},
				{
					"name": "keyword.operator.decrement.tranq",
					"match": "--"
				},
				{
					"name": "keyword.operator.assignment.compound.tranq",
					"match": "%=|\\+=|-=|\\*=|(?<!\\()/="
				},
				{
					"name": "keyword.operator.assignment.compound.bitwise.tranq",
					"match": "&=|\\^=|<<=|>>=|\\|="
				},
				{
					"name": "keyword.operator.bitwise.shift.tranq",
					"match": "<<|>>"
				},
				{
					"name": "keyword.operator.comparison.tranq",
					"match": "!=|<=|>=|==|<|>|=>"
				},
				{
					"name": "keyword.operator.logical.tranq",
					"match": "&&|!|\\|\\|"
				},
				{
					"name": "keyword.operator.bitwise.tranq",
					"match": "&|\\||\\^|~"
				},
				{
					"name": "keyword.operator.tranq",
					"match": "%|\\*|/|-|\\+"
				}
			]
		}
	},
	"scopeName": "source.tranq"
}